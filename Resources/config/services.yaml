services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
    # makes classes in / available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    ruano_a\AccessLimiterBundle\:
        resource: '../../*'
        exclude: '../../{Entity,Migrations,Tests,Kernel.php}'

    ruano_a\AccessLimiterBundle\EventListener\RequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 0}
        arguments:
            $passwords: '%access_limiter.passwords%'
            $active: '%access_limiter.active%'